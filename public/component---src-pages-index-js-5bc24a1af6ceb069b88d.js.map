{"version":3,"file":"component---src-pages-index-js-5bc24a1af6ceb069b88d.js","mappings":"yKAiDA,IAvCY,IAAuC,IAAD,UAArC,YAAEA,EAAW,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBL,MAExC,OACE,gCACE,6BAAQM,EAAkBN,EAAK,MAAMM,EAAiBN,GACtD,wBAAMO,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASR,IACnC,wBAAMS,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASR,IACpC,wBAAMO,KAAK,sBAAsBC,QAASJ,IACzCH,EACA,C,oJCcP,MAvDiB,KAAO,IAAD,EAEpB,MAAMW,GAAOT,EAAAA,EAAAA,gBAAe,cAyBtBU,GADkC,QAAtB,EAAAD,EAAKV,KAAKG,oBAAY,OAAtB,EAAwBL,MAC5BY,EAAKE,kBAAkBC,OAErC,OACG,uBAAKC,MAAM,kBACRH,EAAMI,KAAIC,IACT,MAAMlB,EAAQkB,EAAKC,YAAYnB,OAASkB,EAAKE,OAAOC,KAEpD,OACE,uBAAKC,IAAKJ,EAAKE,OAAOC,KAAME,UAAU,OAChC,sBAAIA,UAAU,MACZ,gBAAC,EAAAC,KAAI,CAACC,GAAIP,EAAKE,OAAOC,KAAMK,SAAS,MAAMH,UAAU,UACnD,wBAAMG,SAAS,YAAY1B,KAG/B,qBACE2B,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYpB,aAAemB,EAAKW,SAE/CH,SAAS,cACvBH,UAAU,SAEE,IAGN,ECrCZ,MAVkB,IAAyB,IAAD,MAAvB,KAAEX,EAAI,SAAEkB,GAAU,EACnC,MAAMC,GAAkC,QAAtB,EAAAnB,EAAKV,KAAKG,oBAAY,aAAtB,EAAwBL,QAAK,QACjCY,EAAKE,kBAAkBC,MACrC,OACE,gBAAC,IAAM,CAACe,SAAUA,EAAU9B,MAAO+B,GAClC,gBAAC,EAAQ,MACD,EAWN,MAAMC,EAAO,IAAM,gBAAC,IAAG,CAAChC,MAAM,a","sources":["webpack://Warehouse/./src/components/seo.js","webpack://Warehouse/./src/components/blcn.js","webpack://Warehouse/./src/pages/index.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\nimport * as styles from \"./_blcn.module.scss\"\n\nconst Bloglist = () => {\n\n   const data = useStaticQuery(\n      graphql`\n      query {\n\t site {\n\t    siteMetadata {\n\t       title\n\t    }\n\t }\n\t allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n\t    nodes {\n\t       excerpt\n\t       fields {\n\t\t  slug\n\t       }\n\t       frontmatter {\n\t\t  date(formatString: \"MMM DD, YYYY\")\n\t\t  title\n\t\t  description\n\t       }\n\t    }\n\t }\n      }`\n   )\n\n   const siteTitle = data.site.siteMetadata?.title || `Title`\n   const posts = data.allMarkdownRemark.nodes\n\n   return (\n      <div class=\"right_flex lis\">\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <div key={post.fields.slug} className=\"box\">\n                  <h2 className=\"tp\">\n                    <Link to={post.fields.slug} itemProp=\"url\" className=\"linkin\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n\t\t    className=\"cont\"\n                  />\n            </div>\n          )\n        })}\n      </div>\n   )\n}\n\nexport default Bloglist\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Bloglist from \"../components/blcn\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  return (\n    <Layout location={location} title={siteTitle}>\n     <Bloglist />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","data","posts","allMarkdownRemark","nodes","class","map","post","frontmatter","fields","slug","key","className","Link","to","itemProp","dangerouslySetInnerHTML","__html","excerpt","location","siteTitle","Head"],"sourceRoot":""}